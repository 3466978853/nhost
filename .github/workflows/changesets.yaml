name: Release

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - 'assets/**'
      - '**.md'
      - '!.changeset/**'
      - 'LICENSE'

jobs:
  version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # * Install Node and dependencies
      - name: Install Node and dependencies
        uses: ./.github/actions/install-dependencies
      - name: Create PR or Publish release
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm run ci:version
          commit: 'chore: update versions'
          title: 'chore: update versions'
          publish: pnpm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-docker:
    name: Publish to Docker
    needs: version
    if: needs.version.outputs.hasChangesets == 'false'
    timeout-minutes: 60
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            nhost/dashboard
          tags: |
            type=schedule
            type=raw,value=latest,enable=${{ github.event_name == 'push' && endsWith(github.ref, github.event.repository.default_branch) }}
            type=ref,event=branch,enable=${{ !endsWith(github.ref, github.event.repository.default_branch) }}
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and publish to Docker Hub
        uses: docker/build-push-action@v2
        timeout-minutes: 60
        with:
          # TODO: use cache https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
